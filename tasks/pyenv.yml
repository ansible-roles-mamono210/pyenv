---
- name: Check whether pyenv is installed
  ansible.builtin.stat:
    path: "{{ pyenv_root }}/bin/pyenv"
  register: pyenv_installed
  changed_when: false
  ignore_errors: true

- name: Install required packages
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
  loop:
    - bzip2
    - bzip2-devel
    - gcc
    - git
    - libffi-devel
    - make
    - ncurses-devel
    - openssl
    - openssl-devel
    - patch
    - readline
    - readline-devel
    - sqlite
    - sqlite-devel
    - zlib-devel

- name: Retrieve pyenv executable
  ansible.builtin.git:
    repo: 'https://github.com/pyenv/pyenv.git'
    dest: "{{ pyenv_root }}"
    version: master
  when: not pyenv_installed.stat.exists

- name: Change the ownership of pyenv executable
  ansible.builtin.file:
    path: "{{ pyenv_root }}"
    owner: "{{ pyenv_owner }}"
    group: "{{ pyenv_group }}"
    mode: "{{ pyenv_mode }}"
    recurse: yes
  when: not pyenv_installed.stat.exists

- name: Configure $HOME/.bashrc
  ansible.builtin.lineinfile:
    path: "{{ linux_user_home }}/.bashrc"
    line: "{{ item }}"
    state: present
    insertafter: EOF
  loop:
    - 'export PYENV_ROOT="$HOME/.pyenv"'
    - 'export PATH="$PYENV_ROOT/bin:$PATH"'
    - 'eval "$(pyenv init --path)"'
    - "if command -v pyenv 1>/dev/null 2>&1; then\n  eval \"$(pyenv init -)\"\nfi"
  when: not pyenv_installed.stat.exists
